1) Запуск ПО через Solution: создаются TCP сервера и сервер Client, Сервера начанают прослушивать порты.

2) 0 - выход , 1 - Read, 2 - NoRead: выбирая один из вариантов, клиент подключается к серверам, отправляет серверам TCP  сообщение "1" или "2" В зависимости от цели.

3) При получении сообщения от клиента, TCP сервера создают ответное сообщение Клиенту. При сообщении Клиента "1" - герируем сообщения с текущей датой - "дата1" и датой конца - "дата2"
При сообщении Клиента "2" - герируем одно сообщения как с вариантом "1" и два других сообщения в котоорых одна из дат равна "000000". Одно из этих сообщений будет выдаваться каждым TCP сервером рандомно.  

	Что бы протестировать вариант с контролируемым NoRead, комментируем любой метод для одного из TCP серверов, в данном случае "server2" (по умолчанию NoRead):

	NoRead
	() => { server2.messegeNoRead(server2_ipEndPoint, server2_soket); }
	//() => { server2.serverConnectTo(server2_ipEndPoint, server2_soket); }

	Read
	//() => { server2.messegeNoRead(server2_ipEndPoint, server2_soket); }
	() => { server2.serverConnectTo(server2_ipEndPoint, server2_soket); }

	
	При вызове этапа: 0 - выход , 1 - Read, 2 - NoRead - выбираем 1
	Будет событие с "NoRead" 